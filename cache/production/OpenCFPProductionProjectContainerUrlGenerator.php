<?php

use Symfony\Component\Routing\RequestContext;
use Symfony\Component\Routing\Exception\RouteNotFoundException;
use Psr\Log\LoggerInterface;

/**
 * This class has been auto-generated
 * by the Symfony Routing Component.
 */
class OpenCFPProductionProjectContainerUrlGenerator extends Symfony\Component\Routing\Generator\UrlGenerator
{
    private static $declaredRoutes;

    public function __construct(RequestContext $context, LoggerInterface $logger = null)
    {
        $this->context = $context;
        $this->logger = $logger;
        if (null === self::$declaredRoutes) {
            self::$declaredRoutes = array(
            'admin' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'OpenCFP\\Http\\Action\\Admin\\DashboardAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
            'admin_talks' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'OpenCFP\\Http\\Action\\Admin\\Talk\\IndexAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/talks',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
            'admin_talk_view' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'OpenCFP\\Http\\Action\\Admin\\Talk\\ViewAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/admin/talks',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
            'admin_talk_favorite' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'OpenCFP\\Http\\Controller\\Admin\\TalksController::favoriteAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/favorite',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/admin/talks',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
            'admin_talk_select' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'OpenCFP\\Http\\Controller\\Admin\\TalksController::selectAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/select',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/admin/talks',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
            'admin_talk_comment_create' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'OpenCFP\\Http\\Controller\\Admin\\TalksController::commentCreateAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/comment',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/admin/talks',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
            'admin_talk_rate' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'OpenCFP\\Http\\Action\\Admin\\Talk\\RateAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/rate',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/admin/talks',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
            'admin_speakers' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'OpenCFP\\Http\\Controller\\Admin\\SpeakersController::indexAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/speakers',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
            'admin_speaker_view' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'OpenCFP\\Http\\Controller\\Admin\\SpeakersController::viewAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/admin/speakers',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
            'admin_speaker_promote' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_require_csrf_token' => true,    '_controller' => 'OpenCFP\\Http\\Action\\Admin\\Speaker\\PromoteAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/promote',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/admin/speakers',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
            'admin_speaker_demote' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_require_csrf_token' => true,    '_controller' => 'OpenCFP\\Http\\Controller\\Admin\\SpeakersController::demoteAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/demote',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/admin/speakers',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
            'admin_speaker_delete' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_require_csrf_token' => true,    '_controller' => 'OpenCFP\\Http\\Controller\\Admin\\SpeakersController::deleteAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/admin/speakers/delete',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
            'admin_export_csv' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'OpenCFP\\Http\\Controller\\Admin\\ExportsController::attributedTalksExportAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/export/csv',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
            'admin_export_csv_anon' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'OpenCFP\\Http\\Controller\\Admin\\ExportsController::anonymousTalksExportAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/export/csv/anon',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
            'admin_export_csv_selected' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'OpenCFP\\Http\\Controller\\Admin\\ExportsController::selectedTalksExportAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/export/csv/selected',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
            'admin_export_csv_emails' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'OpenCFP\\Http\\Controller\\Admin\\ExportsController::emailExportAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/export/csv/emails',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
            'reviewer' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'OpenCFP\\Http\\Action\\Reviewer\\DashboardAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/reviewer/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
            'reviewer_talks' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'OpenCFP\\Http\\Action\\Reviewer\\Talk\\IndexAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/reviewer/talks',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
            'reviewer_talk_view' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'OpenCFP\\Http\\Action\\Reviewer\\Talk\\ViewAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/reviewer/talks',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
            'reviewer_talk_rate' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'OpenCFP\\Http\\Action\\Reviewer\\Talk\\RateAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/rate',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/reviewer/talks',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
            'reviewer_speakers' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'OpenCFP\\Http\\Action\\Reviewer\\Speaker\\IndexAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/reviewer/speakers',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
            'reviewer_speaker_view' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'OpenCFP\\Http\\Action\\Reviewer\\Speaker\\ViewAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/reviewer/speakers',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
            'homepage' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'OpenCFP\\Http\\Action\\Page\\HomePageAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
            'speaker_package' => array (  0 =>   array (  ),  1 =>   array (    'template' => 'package.twig',    '_controller' => 'Symfony\\Bundle\\FrameworkBundle\\Controller\\TemplateController::templateAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/package',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
            'talk_ideas' => array (  0 =>   array (  ),  1 =>   array (    'template' => 'ideas.twig',    '_controller' => 'Symfony\\Bundle\\FrameworkBundle\\Controller\\TemplateController::templateAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/ideas',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
            'coc' => array (  0 =>   array (  ),  1 =>   array (    'template' => 'coc.twig',    '_controller' => 'Symfony\\Bundle\\FrameworkBundle\\Controller\\TemplateController::templateAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/coc',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
            'dashboard' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'OpenCFP\\Http\\Action\\DashboardAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/dashboard',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
            'talk_edit' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_require_csrf_token' => true,    '_controller' => 'OpenCFP\\Http\\Action\\Talk\\EditAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/talk/edit',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
            'talk_new' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'OpenCFP\\Http\\Action\\Talk\\CreateAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/talk/create',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
            'talk_create' => array (  0 =>   array (  ),  1 =>   array (    '_require_csrf_token' => true,    '_controller' => 'OpenCFP\\Http\\Action\\Talk\\CreateProcessAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/talk/create',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
            'talk_update' => array (  0 =>   array (  ),  1 =>   array (    '_require_csrf_token' => true,    '_controller' => 'OpenCFP\\Http\\Action\\Talk\\UpdateAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/talk/update',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
            'talk_delete' => array (  0 =>   array (  ),  1 =>   array (    '_require_csrf_token' => true,    '_controller' => 'OpenCFP\\Http\\Action\\Talk\\DeleteAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/talk/delete',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
            'talk_view' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'OpenCFP\\Http\\Action\\Talk\\ViewAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/talk',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
            'login' => array (  0 =>   array (  ),  1 =>   array (    'template' => 'security/login.twig',    '_controller' => 'Symfony\\Bundle\\FrameworkBundle\\Controller\\TemplateController::templateAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/login',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
            'login_check' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'OpenCFP\\Http\\Action\\Security\\LogInAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/login',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
            'logout' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'OpenCFP\\Http\\Action\\Security\\LogOutAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/logout',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
            'user_new' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'OpenCFP\\Http\\Action\\Signup\\IndexAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/signup',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
            'user_create' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'OpenCFP\\Http\\Action\\Signup\\ProcessAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/signup',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
            'user_edit' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'OpenCFP\\Http\\Controller\\ProfileController::editAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/profile/edit',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
            'user_update' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'OpenCFP\\Http\\Controller\\ProfileController::processAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/profile/edit',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
            'password_edit' => array (  0 =>   array (  ),  1 =>   array (    'template' => 'user/change_password.twig',    '_controller' => 'Symfony\\Bundle\\FrameworkBundle\\Controller\\TemplateController::templateAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/profile/change_password',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
            'password_change' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'OpenCFP\\Http\\Action\\Profile\\ChangePasswordProcessAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/profile/change_password',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
            'forgot_password' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'OpenCFP\\Http\\Action\\Forgot\\IndexAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/forgot',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
            'forgot_password_create' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'OpenCFP\\Http\\Controller\\ForgotController::sendResetAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/forgot',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
            'reset_password_create' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'OpenCFP\\Http\\Controller\\ForgotController::resetAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/reset',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
            'reset_password' => array (  0 =>   array (    0 => 'user_id',    1 => 'reset_code',  ),  1 =>   array (    '_controller' => 'OpenCFP\\Http\\Action\\Forgot\\ResetProcessAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'reset_code',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'user_id',    ),    2 =>     array (      0 => 'text',      1 => '/reset',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
            'password_update' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'OpenCFP\\Http\\Action\\Forgot\\UpdatePasswordAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/updatepassword',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
            );
        }
    }

    public function generate($name, $parameters = array(), $referenceType = self::ABSOLUTE_PATH)
    {
        if (!isset(self::$declaredRoutes[$name])) {
            throw new RouteNotFoundException(sprintf('Unable to generate a URL for the named route "%s" as such route does not exist.', $name));
        }

        list($variables, $defaults, $requirements, $tokens, $hostTokens, $requiredSchemes) = self::$declaredRoutes[$name];

        return $this->doGenerate($variables, $defaults, $requirements, $tokens, $parameters, $name, $referenceType, $hostTokens, $requiredSchemes);
    }
}
